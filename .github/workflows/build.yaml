---
name: Task - Build Rust

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  rust_build:
    runs-on: ubuntu-latest
    permissions:
      # `actions:write` permission is required to delete caches
      #   See also: https://docs.github.com/en/rest/actions/cache?apiVersion=2022-11-28#delete-a-github-actions-cache-for-a-repository-using-a-cache-id
      actions: write
      contents: read
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache/restore@v3
        id: restore-cache
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo

      - name: Setup rust toolchain
        if: steps.restore-cache.outputs.cache-hit != 'true'
        run: rustup show

      - name: Setup build deps
        run: |
          sudo apt-get update
          sudo apt-get install -y clang llvm libudev-dev protobuf-compiler

      - name: Build the project
        run: |
          cargo build --release --workspace

      - name: clean cache
        run: |
          gh extension install actions/gh-actions-cache

          REPO=${{ github.repository }}
          BRANCH=${{ github.ref }}

          echo "Fetching list of cache key"
          cacheKeysForPR=$(gh actions-cache list -R $REPO -B $BRANCH | cut -f 1 )

          ## Setting this to not fail the workflow while deleting cache keys. 
          set +e
          echo "Deleting caches..."
          for cacheKey in $cacheKeysForPR
          do
              echo "$cacheKey in $BRANCH"
              gh actions-cache delete $cacheKey -R $REPO -B $BRANCH --confirm
          done
          echo "Done"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/cache/save@v3
        id: save-cache
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ steps.restore-cache.outputs.cache-primary-key }}
